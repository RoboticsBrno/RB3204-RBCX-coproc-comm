/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_RBCX_PB_H_INCLUDED
#define PB_RBCX_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SetMotorPower {
    uint32_t motorId;
    uint32_t power;
} SetMotorPower;

typedef struct _StmMessage {
    pb_size_t which_payload;
    union {
        uint32_t buttonsStatusMask;
        uint32_t batteryMv;
    } payload;
} StmMessage;

typedef struct _EspMessage {
    pb_size_t which_payload;
    union {
        SetMotorPower motorPower;
        uint32_t ledsStatusMask;
    } payload;
} EspMessage;


/* Initializer values for message structs */
#define StmMessage_init_default                  {0, {0}}
#define EspMessage_init_default                  {0, {SetMotorPower_init_default}}
#define SetMotorPower_init_default               {0, 0}
#define StmMessage_init_zero                     {0, {0}}
#define EspMessage_init_zero                     {0, {SetMotorPower_init_zero}}
#define SetMotorPower_init_zero                  {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SetMotorPower_motorId_tag                1
#define SetMotorPower_power_tag                  2
#define StmMessage_buttonsStatusMask_tag         1
#define StmMessage_batteryMv_tag                 2
#define EspMessage_motorPower_tag                1
#define EspMessage_ledsStatusMask_tag            2

/* Struct field encoding specification for nanopb */
#define StmMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    UINT32,   (payload,buttonsStatusMask,payload.buttonsStatusMask),   1) \
X(a, STATIC,   ONEOF,    UINT32,   (payload,batteryMv,payload.batteryMv),   2)
#define StmMessage_CALLBACK NULL
#define StmMessage_DEFAULT NULL

#define EspMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,motorPower,payload.motorPower),   1) \
X(a, STATIC,   ONEOF,    UINT32,   (payload,ledsStatusMask,payload.ledsStatusMask),   2)
#define EspMessage_CALLBACK NULL
#define EspMessage_DEFAULT NULL
#define EspMessage_payload_motorPower_MSGTYPE SetMotorPower

#define SetMotorPower_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   motorId,           1) \
X(a, STATIC,   SINGULAR, UINT32,   power,             2)
#define SetMotorPower_CALLBACK NULL
#define SetMotorPower_DEFAULT NULL

extern const pb_msgdesc_t StmMessage_msg;
extern const pb_msgdesc_t EspMessage_msg;
extern const pb_msgdesc_t SetMotorPower_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define StmMessage_fields &StmMessage_msg
#define EspMessage_fields &EspMessage_msg
#define SetMotorPower_fields &SetMotorPower_msg

/* Maximum encoded size of messages (where known) */
#define StmMessage_size                          6
#define EspMessage_size                          14
#define SetMotorPower_size                       12

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
