syntax = "proto3";

import "nanopb.proto";

message None {
}

message RegCoefs {
  uint32 p = 1;
  uint32 i = 2;
  uint32 d = 3;
}

message CoprocReq {
  oneof payload {
    None keepalive = 1;
    SetLeds setLeds = 4;
    GetButtons getButtons = 5;
    SetStupidServo setStupidServo = 6;
    UltrasoundReq ultrasoundReq = 7;
    MotorReq motorReq = 8;
    BuzzerReq buzzerReq = 9;
    CalibratePower calibratePower = 10;
    None shutdownPower = 11;
    None versionReq = 12;
  }

  message SetLeds {
    LedsEnum ledsOn = 1;
  }

  enum LedsEnum {
    NONE = 0;
    L1 = 1;
    L2 = 2;
    L3 = 4;
    L4 = 8;
  }

  message GetButtons {
  }

  message SetStupidServo {
    uint32 servoIndex = 1;
    oneof servoCmd {
      None disable = 4;
      float setPosition = 5;
    }
  }

  message UltrasoundReq {
    uint32 utsIndex = 1;
    oneof utsCmd {
      None singlePing = 4;
    }
  }

  message MotorReq {
    uint32 motorIndex = 1;
    oneof motorCmd {
      sint32 setPower = 5;
      sint32 setBrake = 6;
      sint32 setVelocity = 7;
      RegCoefs setVelocityRegCoefs = 16;
    }
  }

  message BuzzerReq {
    bool on = 1;
  }

  message CalibratePower {
    uint32 vccMv = 1;
    uint32 battMidMv = 2;
    uint32 vRef33Mv = 3;
    uint32 temperatureC = 4;
  }
}

message CoprocStat {
  oneof payload {
    None ledsStat = 4;
    ButtonsStat buttonsStat = 5;
    None stupidServoStat = 6;
    UltrasoundStat ultrasoundStat = 7;
    PowerAdcStat powerAdcStat = 8;
    VersionStat versionStat = 9;
  }

  message ButtonsStat {
    ButtonsEnum buttonsPressed = 1;
  }

  enum ButtonsEnum {
    NONE = 0;
    BOFF = 1;
    B1 = 2;
    B2 = 4;
    B3 = 8;
    B4 = 16;
    BON = 32;
  }

  message UltrasoundStat {
    uint32 utsIndex = 1;
    uint32 roundtripMicrosecs = 2;
  }

  message PowerAdcStat {
    uint32 vccMv = 1;
    uint32 battMidMv = 2;
    int32 temperatureC = 3;
  }

  message VersionStat {
    bytes revision = 1 [(nanopb).max_size = 8, (nanopb).fixed_length = true];
    uint32 number = 2;
    bool dirty = 3;
  }
}
